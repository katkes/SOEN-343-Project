{
    "env": {
      "browser": true,
      "node": true,
      "es2021": true
    },
    "parser": "@typescript-eslint/parser", 
    "parserOptions": {
      "ecmaVersion": 12,
      "sourceType": "module"
    },
    "extends": [
      "eslint:recommended",
      "plugin:@typescript-eslint/recommended",
      "plugin:react/recommended",
      "plugin:prettier/recommended"
    ],
    "plugins": [
      "@typescript-eslint",
      "react",
      "prettier"
    ],
    "rules": {
      "prettier/prettier": "error",  // Ensures Prettier's formatting rules are enforced
      "no-unused-vars": "warn",      // Warns about unused variables (good for cleaning up code)
      "no-console": "warn",          // Warns about console.log statements (optional based on project style)
      "eqeqeq": "error",             // Enforces strict equality checks (=== vs ==)
      "no-trailing-spaces": "error", // Ensures no trailing spaces at the end of lines
      "no-magic-numbers": "off",     // Disables the warning about magic numbers (can be useful to keep)
      "semi": ["error", "always"],   // Enforces semicolons at the end of statements
      "quotes": ["error", "single"], // Enforces single quotes for strings
      "comma-dangle": ["error", "always-multiline"], // Enforces trailing commas in multiline objects/arrays
      "consistent-return": "off",    // Allows functions without return statements to be valid (can be customized)
      "@typescript-eslint/no-unused-vars": ["error"], // Enforces no unused vars for TypeScript
      "@typescript-eslint/explicit-module-boundary-types": "off" // Optional rule for type safety
    },
    "settings": {
      "react": {
        "version": "detect"  // Automatically detects React version for JSX/React linting
      }
    }
  }
  